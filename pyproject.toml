[project]
name = "qcrbox_cmd_tester"
version = "0.1.0"
description = "Command-line test suite runner for QCrBox API"
readme = "README.md"
requires-python = ">= 3.11"
license = {text = "MPL-2.0"}
authors = [{name = "Paul Niklas Ruth", email = "panikruth@gmail.com"}]
keywords = ["crystallography", "testing", "qcrbox", "cif"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "pyyaml>=6.0.3",
    "pydantic>=2.12.2",
    "pycifrw>=4.4.6",
    "qcrboxapiclient @ git+https://github.com/QCrBox/QCrBoxAPIClient@0.1.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]
dev = [
    "qcrbox_cmd_tester[test]",
    "jupyterlab",
    "ruff>=0.14.1",
    "pre-commit",
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
]

[project.scripts]
qcrbox-test = "qcrbox_cmd_tester.__main__:main"

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.hatch]
metadata.allow-direct-references = true

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.pypi-dependencies]
qcrbox_cmd_tester = { path = ".", editable = true }

[tool.pixi.tasks]

[tool.pixi.feature.devtools.tasks]
lint = "ruff check src/ tests/"
format = "ruff format src/ tests/"
pre-commit-run = "pre-commit run --all-files"

[tool.pixi.feature.test.tasks]
test = "pytest tests/"
test-cov = "pytest tests/ --cov=src/qcrbox_cmd_tester --cov-report=term-missing"

[tool.pixi.dependencies]
# Main dependencies are now defined in [project.dependencies]
# Pixi will use those, but we can add version constraints here if needed
pyyaml = ">=6.0.3,<7"
pydantic = ">=2.12.2,<3"
pycifrw = ">=4.4.6,<5"

[tool.pixi.feature.test.dependencies]
pytest = "*"
pytest-cov = ">=7.0.0,<8"

[tool.pixi.feature.devtools.dependencies]
jupyterlab = "*"
ruff = ">=0.14.1,<0.15"
pre-commit = "*"

[tool.pixi.environments]
dev = { features = ["test", "devtools"], solve-group = "default" }

[tool.pytest.ini_options]
testpaths = ["tests"]
# Ignore collection warnings for Pydantic models that start with "Test"
filterwarnings = [
    "ignore::pytest.PytestCollectionWarning",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/.pixi/*",
    "*/dev_notebooks/*",
    "*/qcrbox_client.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
